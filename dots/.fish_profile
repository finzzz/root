# Hide welcome message
set fish_greeting
set VIRTUAL_ENV_DISABLE_PROMPT "1"
set -x MANPAGER "sh -c 'col -bx | bat -l man -p'"
set -x MANROFFOPT "-c" # set/unset if man page has formatting issue

# Paths
fish_add_path /home/linuxbrew/.linuxbrew/bin
fish_add_path /opt/homebrew/bin # mac os
fish_add_path $HOME/.local/bin
fish_add_path $HOME/.krew/bin 
fish_add_path $HOME/go/bin
fish_add_path $HOME/bin

# Sources
source $HOME/.config/fzf.fish/completions/fzf_configure_bindings.fish
for f in $HOME/.config/fzf.fish/functions/*;
  source $f;
end
source $HOME/.config/fzf.fish/conf.d/fzf.fish
[ -f $HOME/.fish_custom ] && source $HOME/.fish_custom

# Autocomplete
command -v starship >/dev/null && starship init fish | source
command -v zoxide >/dev/null && zoxide init fish | source
command -v kubecm >/dev/null && kubecm c fish | source
command -v gh >/dev/null && gh completion -s fish | source

# Environment variables
export EDITOR=nvim
export STARSHIP_CONFIG=$HOME/starship.toml

# Theme
fish_config theme choose "TokyoNight Night"

# Aliases
alias ls='exa -al --color=always --group-directories-first --icons' # preferred listing
alias la='exa -a --color=always --group-directories-first --icons'  # all files and dirs
alias ll='exa -l --color=always --group-directories-first --icons'  # long format
alias lt='exa -aT --color=always --group-directories-first --icons' # tree listing

alias git-default-branch="gb -a | grep remotes/origin/HEAD | cut -d ' ' -f5"
alias git-pick-unstaged="gs -s -uno | tail -n +2 | cut -c4- | fzf --preview='gd -- {}'"

alias ga='git add'
alias gaf='git-pick-unstaged | xargs git add'

alias gb='git branch'

alias gca='git commit --amend'
alias gcm='git commit -m '

alias gco='git checkout'
alias gcor='git-pick-unstaged | xargs git checkout --' # discard changes made to an unstaged file
alias gcot='gtl | xargs git checkout' # checkout tag

alias gd='git diff --color=always'
alias gl='git log --graph --decorate --oneline --color=always | fzf --ansi --preview="gd {2}" | cut -d" " -f2'
alias glo='git log --graph --abbrev-commit --decorate --date=relative --format=format:"%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)" --all'
alias gs='git status -sb'
alias gsu='git ls-files --others --exclude-standard'

alias gf='git fetch'
alias gp='git push -u origin HEAD'
alias gup="gf && git-default-branch | xargs git rebase"

alias grb='git rebase'
alias grba='grb --abort'
alias grbc='grb --continue'
alias grbi='gl | xargs git rebase -i'

alias gst='git stash'
alias gstd='gitl | xargs git stash drop'
alias gstl='gst list --format="%C(yellow)%gd%C(reset) %C(green)(%cr)%C(reset) %s" --color=always | fzf --ansi --preview="gst show -p --color=always {1}" | cut -d" " -f1'
alias gstp='gstl | xargs git stash pop'
alias gsts='gst save'

alias gt='git tag'
alias gta='gt -a'
alias gtd='git-ls-tag | xargs git tag -d'
alias gtl='gt -l --sort=-v:refname | fzf --preview "git show --color=always {}"'

function worktree-init
  set URL $argv[1]
  set NAME $argv[2]
  test -z $NAME && set NAME $(echo $URL | awk -F/ '{print $NF}' | sed -e 's/\.git$//')
  mkdir $NAME
  cd "$NAME"
  git clone --bare "$URL" .bare
  echo "gitdir: ./.bare" > .git
  git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
  git fetch origin
end

alias gw='git worktree'
alias gwa='gw add'
alias gwi='worktree-init'
alias gwl='gw list'
alias gwm='gw move'
alias gwp='gw prune'
alias gwr='gw remove'

alias tf='terraform'
alias tg='terragrunt'
alias tfa='tf apply'
alias tfay='tfa --auto-approve'
alias tfar='tfa -refresh-only'
alias tfd='tf destroy'
alias tfdy='tfd --auto-approve'
alias tff='tf fmt'
alias tfi='tf init'
alias tfir='tf init -backend=false'
alias tfl='tflint'
alias tfp='tf plan'
alias tfpr='tfp -refresh-only'
alias tfs='tfswitch'
alias tfv='tf validate'

alias asc='asciinema'
alias cat='bat --style header --style snip --style changes --style header'
alias cd='z'
alias cpr='nvim +%y +"echo delete(@%)" +qa! - >/dev/null'
alias df='duf'
alias diff='delta' # git-delta
alias du='dust'
alias grep='grep --color=auto'
alias ip="ip -color"
alias lg='lazygit'
alias port='lsof -Pi'
alias ps='procs'
alias psmem='ps auxf | sort -nr -k 4'
alias top='btop'
alias vi='nvim'
alias watch="watch "
alias wget='wget -c'

alias k='kubectl'
alias kc='kubecm'
alias ko='kops'

function ssh-agent-sock-file
  export SSH_AUTH_SOCK=$(/bin/ls -dt1 /tmp/ssh-* | head -1 | xargs -I% find % -name "agent*" -user $USER)
end

alias ssa='ssh-add'
alias ssk='ssh-keygen'
alias sss='ssh-agent-sock-file'

alias ytl='yt-dlp -qF --list-formats' # <url>
alias ytd='yt-dlp -f' # <format id: 251+271> <url>

alias awsp='export AWS_PROFILE="$(command -v aws >/dev/null && aws configure list-profiles | fzf)"'
alias awsl='awsp && aws sso login --no-browser'
alias gcp='gcloud'
alias gcpi='gcp init --no-browser --console-only --skip-diagnostics'
alias gcpl="gcp auth application-default login --no-launch-browser" # login
